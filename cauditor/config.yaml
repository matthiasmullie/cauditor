site:
    title: Cauditor
    description: Visualize metrics for PHP projects to understand their architecture & keep them under control.
    domain: $SITE_DOMAIN
    host: $SITE_HOST
    twitter: cauditor_org
    ga: $GOOGLE_ANALYTICS

mysql:
    user: $RDS_USERNAME
    pass: $RDS_PASSWORD
    db: $RDS_DB_NAME
    host: $RDS_HOSTNAME
    port: $RDS_PORT

aws:
    access_key: $AWS_ACCESS_KEY
    secret_key: $AWS_SECRET_KEY

s3:
    region: $AWS_REGION
    bucket: $S3_BUCKET

sqs:
    region: $AWS_REGION
    queues:
        php-priority: $SQS_PRIORITY
        php-rest: $SQS_REST

github:
    id: $GITHUB_ID
    secret: $GITHUB_SECRET
    # https://developer.github.com/v3/oauth/#scopes
    scopes: read:org,user:email,admin:repo_hook

charts:
    -
        code: "mi"
        name: "Maintainability Index"
        basis: "method"
        # 100-20 is considered ok; 20-10 suspicious; 10-0 bad
        # given the long green range and very low threshold, things can start to turn orange-ish a bit earlier
        # @see http://blogs.msdn.com/b/codeanalysis/archive/2007/11/20/maintainability-index-range-and-meaning.aspx
        range: [70, 45, 30]
    -
        code: "hi"
        name: "Intelligent Content"
        basis: "method"
        range: [0, 30, 80]
    -
        code: "ccn"
        name: "Cyclomatic Complexity"
        basis: "method"
        # 1-4 green-ish; 5-7 yellow-ish; 8-10: orange-ish; 10+: red
        # @see http://phpmd.org/rules/codesize.html#npathcomplexity
        range: [0, 5, 11]
    -
        code: "npath"
        name: "NPath complexity"
        basis: "method"
        range: [0, 30, 200]
    -
        code: "i"
        name: "Instability"
        basis: "class"
        # range from 0 to 1, with 0 indicating a package very resilient to change in
        # dependency classes; 1 being very unstable
        # going with green-ish for 70% of the index so only the really problematic
        # parts light up (it's pretty easy to score very high on this metric)
        range: [.2, .75, .8]
    -
        code: "dit"
        name: "Depth of Inheritance"
        basis: "class"
        # inheriting too deep increases complexity & instability
        range: [0, 3, 5]
    -
        code: "ca"
        name: "Afferent Coupling"
        basis: "class"
        # being used by lots of other packages can signify the class isn't independent enough
        # being high means having a lot of impact on the codebase, lots of others depend on you
        range: [0, 5, 10]
    -
        code: "ce"
        name: "Efferent Coupling"
        basis: "class"
        # using lots of other packages can signify the class has too much responsibilities
        range: [0, 10, 20]

session:
    # 30 days (30 * 24 * 60 * 60 seconds)
    max_age: 2592000

data:
    # json path
    path: $DATA_PATH
    filename: "{project}/{hash}.json"
